<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Full Calendar</title>
  <style>
    :root {
      --blue:#0078D4; --gold:#FFC107; --bg:#F4F8FC; --card:#fff;
      --text:#1f2937; --muted:#64748b; --shadow:0 6px 16px rgba(0,0,0,0.08);
      --green:#28a745; --orange:#ff9800; --darkbg:#1f2937; --darktext:#f4f4f4;
    }
    * { box-sizing: border-box; }
    body { margin:0; font-family:Segoe UI, system-ui, sans-serif;
           background:var(--bg); color:var(--text); transition:background .3s,color .3s;}
    header { background:var(--blue); color:#fff; padding:24px; text-align:center; }
    .wrap { max-width:1000px; margin:22px auto; padding:0 16px; }
    table { width:100%; border-collapse:collapse; background:var(--card); box-shadow:var(--shadow); border-radius:12px; overflow:hidden;}
    th, td { width:14.28%; padding:10px; border:1px solid #e5e7eb; vertical-align:top; min-height:80px;}
    th { background:#e0f0ff; color:var(--blue); }
    td { height:100px; }
    .day-num { font-weight:700; margin-bottom:6px; }
    .task { display:block; font-size:.85rem; margin:2px 0; padding:3px 6px; border-radius:4px; color:#fff;}
    .rnbp { background:var(--blue);}
    .respite { background:var(--gold); color:#000;}
    /* Dark mode */
    body.dark { background:var(--darkbg); color:var(--darktext);}
    body.dark th { background:#334155; color:var(--darktext);}
    body.dark td { border-color:#475569; }
    body.dark .task.respite { color:#000; }
    .toggle-btn { background:var(--blue); color:#fff; border:none; padding:8px 14px;
                  border-radius:6px; cursor:pointer; margin-bottom:12px;}
    .toggle-btn:hover { background:#005fa3;}
  </style>
</head>
<body>
  <header>
    <h1>ðŸ—“ Full Calendar</h1>
    <p>Colorâ€‘coded events for RNBP (blue) & Respite (gold)</p>
  </header>

  <main class="wrap">
    <button class="toggle-btn" onclick="toggleDark()">Toggle Dark Mode</button>
    <table>
      <thead>
        <tr>
          <th>Sun</th><th>Mon</th><th>Tue</th><th>Wed</th>
          <th>Thu</th><th>Fri</th><th>Sat</th>
        </tr>
      </thead>
      <tbody id="calendar-body">
        <!-- Calendar days autoâ€‘render -->
      </tbody>
    </table>
  </main>

  <script>
    function toggleDark(){
      document.body.classList.toggle('dark');
      localStorage.setItem('theme', document.body.classList.contains('dark') ? 'dark' : 'light');
    }
    if(localStorage.getItem('theme')==='dark'){document.body.classList.add('dark');}

    const events = {
      '2025-09-08': [{title:'RNBP Orientation', type:'rnbp'}],
      '2025-09-09': [{title:'NRSG 103 Reading', type:'rnbp'}, {title:'Respite Lesson 1 Prep', type:'respite'}],
      '2025-09-10': [{title:'NRSG 106 Module Review', type:'rnbp'}, {title:'Respite Quiz', type:'respite'}],
      '2025-09-15': [{title:'NRSG 103 Quiz #1 Opens', type:'rnbp'}],
      '2025-09-16': [{title:'Respite Lesson 3: Emergencies', type:'respite'}],
      '2025-09-18': [{title:'NRSG 106 Skills Lab', type:'rnbp'}]
    };

    function buildCalendar(year, month){
      const firstDay = new Date(year, month, 1).getDay();
      const daysInMonth = new Date(year, month+1, 0).getDate();
      const tbody = document.getElementById('calendar-body');
      tbody.innerHTML = '';
      let date = 1;
      for(let i=0;i<6;i++){
        const row = document.createElement('tr');
        for(let j=0;j<7;j++){
          const cell = document.createElement('td');
          if(i===0 && j<firstDay){
            cell.innerHTML='';
          } else if(date>daysInMonth){
            cell.innerHTML='';
          } else {
            const dayDiv = document.createElement('div');
            dayDiv.className='day-num';
            dayDiv.textContent = date;
            cell.appendChild(dayDiv);
            const dateStr = `${year}-${String(month+1).padStart(2,'0')}-${String(date).padStart(2,'0')}`;
            if(events[dateStr]){
              events[dateStr].forEach(ev=>{
                const span = document.createElement('span');
                span.className=`task ${ev.type}`;
                span.textContent=ev.title;
                cell.appendChild(span);
              });
            }
            date++;
          }
          row.appendChild(cell);
        }
        tbody.appendChild(row);
        if(date>daysInMonth) break;
      }
    }

    const now = new Date();
    buildCalendar(now.getFullYear(), now.getMonth());
  </script>
</body>
</html>
